{
    "openapi": "3.0.0",
    "info": {
        "title": "National Exam Card API",
        "description": "The National Exam Card API provides access to student's application for exam card data and process. ",
        "version": "0.1.0"
    },
    "paths": {
        "/appplication": {
            "get": {
                "tags": [
                    "apply"
                ],
                "summary": "Get a list of all student applications",
                "operationId": "ac4b338cec70a632a5ff95fd1f789744",
                "responses": {
                    "200": {
                        "description": "List of student applications"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/application": {
            "post": {
                "tags": [
                    "apply"
                ],
                "summary": "Create a new application",
                "operationId": "10b1f5823a2602fa4c4ef155b9a044ff",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Sample Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Sample content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student application created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/application/{id}": {
            "get": {
                "tags": [
                    "apply"
                ],
                "summary": "Get a specific student application by ID",
                "operationId": "53a449392d58bcdac6d371b2d6b466ab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the application",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student application details"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "apply"
                ],
                "summary": "Update an existing student application",
                "operationId": "0c79a9f4b928cab4aac1c6ca6eac544b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the student application",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Student application updated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "apply"
                ],
                "summary": "Delete a student application by ID",
                "operationId": "18ca54502e223e9408216f5487c5199c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the student application",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Student application deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/calendar": {
            "get": {
                "tags": [
                    "calendar"
                ],
                "summary": "Get a list of all calendar events",
                "operationId": "08a803fe237a76081b119fcd0961cf09",
                "responses": {
                    "200": {
                        "description": "List of calendar events"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "calendar"
                ],
                "summary": "Create a new calendar event",
                "operationId": "857913d662da8c9a5e14b0dd3ebc109d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Sample Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Sample content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Calendar event created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/calendar/{id}": {
            "get": {
                "tags": [
                    "calendar"
                ],
                "summary": "Get a specific calendar event by ID",
                "operationId": "8b1a3cb09aaf8b498b22e612257af49d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the calendar event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Calendar event details"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "calendar"
                ],
                "summary": "Update an existing calendar event",
                "operationId": "c9feb19dc9e866e9c6963ef1808c64ae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the calendar event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Calendar event updated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "calendar"
                ],
                "summary": "Delete a calendar event by ID",
                "operationId": "8eed73fd20b5ba6a5d83dc26d9f70f2d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the calendar event",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Calendar event deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/combination": {
            "get": {
                "tags": [
                    "combination"
                ],
                "summary": "Get a list of all combinations",
                "operationId": "e6d7fc8051a35fdab05eb358646f5aa8",
                "responses": {
                    "200": {
                        "description": "List of combinations"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "combination"
                ],
                "summary": "Create a new combination",
                "operationId": "337988ebafad0698dd64e9c5ad5346ed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Sample Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Sample content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Combination created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/combination/{id}": {
            "get": {
                "tags": [
                    "combination"
                ],
                "summary": "Get a specific combination by ID",
                "operationId": "ce617e8414e6c5d08171b8d9f505ead7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the combination",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Combination details"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "combination"
                ],
                "summary": "Update an existing combination",
                "operationId": "97f26aed2601254c03ae23ffe5dda246",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the combination",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Combination updated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "combination"
                ],
                "summary": "Delete a combination by ID",
                "operationId": "16d207b8f78bb5f0b10b514caaf868ce",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the combination",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Combination deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/marks": {
            "get": {
                "tags": [
                    "marks"
                ],
                "summary": "Get a list of all marks",
                "operationId": "c291194f941b3c5faadc35db74a64c23",
                "responses": {
                    "200": {
                        "description": "List of marks"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "marks"
                ],
                "summary": "Create a new marks",
                "operationId": "65e519ebab57e69351d438c0e4efb584",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Sample Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Sample content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Marks created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/marks/{id}": {
            "get": {
                "tags": [
                    "marks"
                ],
                "summary": "Get a specific marks by ID",
                "operationId": "c46dda3250c2adc791e5071fa8c3b404",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the marks",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Marks details"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "marks"
                ],
                "summary": "Update an existing marks",
                "operationId": "17238cbdb5bae011ba7c8cb7dd373166",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the marks",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Marks updated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "marks"
                ],
                "summary": "Delete a marks by ID",
                "operationId": "4e96fe44070fb218bf151fcb99762ae9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the marks",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Marks deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/notification": {
            "get": {
                "tags": [
                    "notification"
                ],
                "summary": "Get a list of all notifications",
                "operationId": "374cf5759ae311f38666cfd58baeeee3",
                "responses": {
                    "200": {
                        "description": "List of notifications"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/notification/{id}": {
            "delete": {
                "tags": [
                    "notification"
                ],
                "summary": "Delete a notification by ID",
                "operationId": "bd79e4667720f473600515b005c5784a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the notification",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Notification deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/paper": {
            "get": {
                "tags": [
                    "paper"
                ],
                "summary": "Get a list of all papers",
                "operationId": "d58075c7926292a5de2a63061bde3e55",
                "responses": {
                    "200": {
                        "description": "List of papers"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "paper"
                ],
                "summary": "Create a new paper",
                "operationId": "3941b36bac78c8f5f9cf4d07806e3ca3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Sample Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Sample content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Past paper created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/paper/{id}": {
            "get": {
                "tags": [
                    "paper"
                ],
                "summary": "Get a specific paper by ID",
                "operationId": "bae445e170aa0aa12a0965d1ad868924",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the paper",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Past paper details"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "paper"
                ],
                "summary": "Update an existing past paper",
                "operationId": "c032fe60d70805ccd1fc5a25e6af8e81",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the past paper",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Past paper updated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "paper"
                ],
                "summary": "Delete a past paper by ID",
                "operationId": "da342e2727072bc7f428d8dd23d5ca0d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the past paper",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Past paper deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/school": {
            "get": {
                "tags": [
                    "school"
                ],
                "summary": "Get a list of all schools",
                "operationId": "a797b139084f697bd0ff6e06407c9857",
                "responses": {
                    "200": {
                        "description": "List of schools"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "school"
                ],
                "summary": "Create a new school",
                "operationId": "38dc7d795b63ce7751a0e25701905827",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Sample Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Sample content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "School created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/school/{id}": {
            "get": {
                "tags": [
                    "school"
                ],
                "summary": "Get a specific school by ID",
                "operationId": "57b0e5960851cb1483a8e4cfbbecdaa8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the school",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "School details"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "school"
                ],
                "summary": "Update an existing school",
                "operationId": "4c5044fc02583f859c77bc752a373de9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the school",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "School updated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "school"
                ],
                "summary": "Delete a school by ID",
                "operationId": "51cc4ecdaca2e43862fb6aeead1516f7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the school",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "School deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/subject": {
            "get": {
                "tags": [
                    "subject"
                ],
                "summary": "Get a list of all subjects",
                "operationId": "f1813fc79be393990fe522f914a791fe",
                "responses": {
                    "200": {
                        "description": "List of subjects"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "post": {
                "tags": [
                    "subject"
                ],
                "summary": "Create a new subject",
                "operationId": "d408fb1b4958123bf1d5cf3f774e33ab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Sample Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Sample content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subject created successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/subject/{id}": {
            "get": {
                "tags": [
                    "subject"
                ],
                "summary": "Get a specific subject by ID",
                "operationId": "9541bfef1e6079847725830e5d93b22d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the subject",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subject details"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "subject"
                ],
                "summary": "Update an existing subject",
                "operationId": "4714951461f8b03f716f8c6b74ddfe93",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the subject",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated content"
                                    },
                                    "author_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subject updated successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "subject"
                ],
                "summary": "Delete a subject by ID",
                "operationId": "61afd9e5d731fe4047f01ebd7f4598a4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the subject",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Subject deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "apply",
            "description": "Operations related to student application"
        },
        {
            "name": "calendar",
            "description": "Operations related to calendar"
        },
        {
            "name": "combination",
            "description": "Operations related to combination"
        },
        {
            "name": "marks",
            "description": "Operations related to marks"
        },
        {
            "name": "notification",
            "description": "Operations related to notification"
        },
        {
            "name": "paper",
            "description": "Operations related to past papers"
        },
        {
            "name": "school",
            "description": "Operations related to school"
        },
        {
            "name": "subject",
            "description": "Operations related to subject"
        }
    ]
}